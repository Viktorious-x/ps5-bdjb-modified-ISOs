<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.ps5jb</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>org.ps5jb</groupId>
    <artifactId>stubs</artifactId>
    <packaging>jar</packaging>
    <description>
        Downloads BD-J classes from HD Cookbook repository and organizes them to replace default classes in JDK's java.base module.
        Additionally, this project stores stub classes that exist only on PS5 to be able to use them in the Xlet.
    </description>

    <properties>
        <bdjstack.dir>${project.basedir}/../lib</bdjstack.dir>
    </properties>

    <build>
        <plugins>
            <!-- Use ant script to download BD-J classes and repackage them to work with JDK modules -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-bdj</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <!-- Check if all BD-J stubs are already downloaded and set "bdj.exists" if so. The rest of tasks will be skipped if this property is set. -->
                                <condition property="bdj.exists">
                                    <and>
                                        <available file="${bdjstack.dir}/bdj.jar" />
                                        <available file="${bdjstack.dir}/pbp-javadoc.zip" />
                                        <available file="${bdjstack.dir}/javatv.jar" />
                                        <available file="${bdjstack.dir}/javatv-javadoc.zip" />
                                        <available file="${bdjstack.dir}/gem.jar" />
                                        <available file="${bdjstack.dir}/gem-javadoc.zip" />
                                    </and>
                                </condition>
                                <!--
                                    Download HD Cookbook stubs for BD-J. This archive includes multiple different APIs:
                                    - Connected Device Configuration (CDC) 1.0 [JSR 36]
                                    - Foundation Profile (FP) 1.0 [JSR 46]
                                    - Personal Basis Profile (PBP) 1.0 [JSR 129]
                                    - Java TV API 1.1 [JSR 927]
                                    - JSSE 1.0.3 for CDC 1.0.2
                                    - Globally Executable Multimedia Home Platform (GEM)
                                    - BD-J API

                                    The above is not strictly the same as on PS5, which actually uses:
                                    - Connected Device Configuration 1.1 [JSR 218]
                                    - Foundation Profile 1.1 [JSR 219]
                                      - JCE
                                      - JSSE
                                      - JAAS
                                    - Personal Basis Profile 1.1.2 [JSR 217]

                                    Security packages JCE, JSSE and JAAS are already included in JDK 11; GEM and Java TV will be downloaded from a more recent source.
                                    Personal Basis Profile 1.1.2 is provided as binary in this repo, compiled from the old sources of PhoneME Advanced project.
                                    So the only interesting classes from HD Cookbook archive that are kept is BD-J API.
                                -->
                                <get src="https://github.com/zathras/java.net/raw/master/hdcookbook/lib/stubs/interactive/classes.zip"
                                     dest="${bdjstack.dir}"
                                     quiet="true"
                                     usetimestamp="true"
                                     skipexisting="true"
                                     unless:set="bdj.exists" />
                                <!-- Download Javadoc for JSR217 (Personal Basis Profile 1.1.2). -->
                                <get src="http://download.oracle.com/otn-pub/jcp/pbp-1.1.2-mrel-JSpec/pbp-1_1_2-mrel-spec-jdoc.zip"
                                     dest="${bdjstack.dir}/pbp-javadoc.zip"
                                     quiet="true"
                                     usetimestamp="true"
                                     skipexisting="true"
                                     unless:set="bdj.exists" />
                                <!-- Download proper stubs and Javadoc for GEM API from DVB -->
                                <get src="https://dvb.org/wp-content/uploads/2019/12/mug226-gem_packaged_media.zip"
                                     dest="${bdjstack.dir}"
                                     quiet="true"
                                     usetimestamp="true"
                                     skipexisting="true"
                                     unless:set="bdj.exists" />
                                <!-- Download reference implementation of JSR927 (Java TV 1.1) -->
                                <get src="http://download.oracle.com/otn-pub/jcp/javatv-1.1-mr-oth-JPR/jtv-1_1-linux-x86.zip"
                                     dest="${bdjstack.dir}"
                                     quiet="true"
                                     usetimestamp="true"
                                     skipexisting="true"
                                     unless:set="bdj.exists" />
                                <!-- Download Javadoc for JSR927 (Java TV API 1.1.1). -->
                                <get src="http://download.oracle.com/otn-pub/jcp/java_tv-1.1.1-mrel-oth-JSpec/java_tv-1.1.1-mrel2-spec.zip"
                                     dest="${bdjstack.dir}/javatv-javadoc.zip"
                                     quiet="true"
                                     usetimestamp="true"
                                     skipexisting="true"
                                     unless:set="bdj.exists" />
                                <!-- Create directories which will hold classes going into individual JARs -->
                                <mkdir dir="${bdjstack.dir}/classes/bdj" unless:set="bdj.exists" />
                                <mkdir dir="${bdjstack.dir}/classes/gem" unless:set="bdj.exists" />
                                <mkdir dir="${bdjstack.dir}/classes/javatv" unless:set="bdj.exists" />
                                <!-- Unzip all BD-J API classes into its own directory -->
                                <unzip src="${bdjstack.dir}/classes.zip" dest="${bdjstack.dir}/classes/bdj" overwrite="false" stripAbsolutePathSpec="true" unless:set="bdj.exists">
                                    <patternset>
                                        <include name="org/bluray/**" />
                                    </patternset>
                                </unzip>
                                <!-- Unzip JSR 927 into its own directory -->
                                <unzip src="${bdjstack.dir}/jtv-1_1-linux-x86.zip" dest="${bdjstack.dir}/classes/javatv" overwrite="false" stripAbsolutePathSpec="true" unless:set="bdj.exists">
                                    <patternset>
                                        <include name="javatv.jar" />
                                    </patternset>
                                </unzip>
                                <unzip src="${bdjstack.dir}/classes/javatv/javatv.jar" dest="${bdjstack.dir}/classes/javatv" overwrite="false" stripAbsolutePathSpec="true" unless:set="bdj.exists">
                                    <patternset>
                                        <include name="javax/media/**" />
                                        <include name="javax/tv/**" />
                                    </patternset>
                                </unzip>
                                <delete file="${bdjstack.dir}/classes/javatv/javatv.jar" unless:set="bdj.exists" />
                                <!-- Unzip GEM into its own directory -->
                                <unzip src="${bdjstack.dir}/mug226-gem_packaged_media.zip" dest="${bdjstack.dir}/classes/gem" overwrite="false" stripAbsolutePathSpec="true" unless:set="bdj.exists">
                                    <patternset>
                                        <include name="mug226-gem_packaged_media/gem_packaged_media/interactive/html/**" />
                                        <include name="mug226-gem_packaged_media/gem_packaged_media/interactive/classes.zip" />
                                    </patternset>
                                    <compositemapper>
                                        <globmapper from="mug226-gem_packaged_media/gem_packaged_media/interactive/html/*" to="javadoc/*" />
                                        <globmapper from="mug226-gem_packaged_media/gem_packaged_media/interactive/classes.zip" to="classes/classes.zip" />
                                    </compositemapper>
                                </unzip>
                                <unzip src="${bdjstack.dir}/classes/gem/classes/classes.zip" dest="${bdjstack.dir}/classes/gem/classes" overwrite="false" stripAbsolutePathSpec="true" unless:set="bdj.exists" />
                                <delete file="${bdjstack.dir}/classes/gem/classes/classes.zip" unless:set="bdj.exists" />
                                <!-- Now create the JARs and delete the downloaded archives -->
                                <jar destfile="${bdjstack.dir}/bdj.jar" basedir="${bdjstack.dir}/classes/bdj" defaultexcludes="false" unless:set="bdj.exists" />
                                <jar destfile="${bdjstack.dir}/javatv.jar" basedir="${bdjstack.dir}/classes/javatv" defaultexcludes="false" unless:set="bdj.exists" />
                                <jar destfile="${bdjstack.dir}/gem.jar" basedir="${bdjstack.dir}/classes/gem/classes" defaultexcludes="false" unless:set="bdj.exists" />
                                <!-- Create zip for GEM API Javadoc -->
                                <zip destfile="${bdjstack.dir}/gem-javadoc.zip" basedir="${bdjstack.dir}/classes/gem/javadoc" defaultexcludes="false" unless:set="bdj.exists" />
                                <delete dir="${bdjstack.dir}/classes" includeemptydirs="true" unless:set="bdj.exists" />
                                <delete file="${bdjstack.dir}/classes.zip" unless:set="bdj.exists" />
                                <delete file="${bdjstack.dir}/mug226-gem_packaged_media.zip" unless:set="bdj.exists" />
                                <delete file="${bdjstack.dir}/jtv-1_1-linux-x86.zip" unless:set="bdj.exists" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
              When compiling PS5 stubs, make sure to patch base JDK module with Personal Basis Profile classes in order to not use newer API, not available on PS5 runtime.
              Also, limit the visibility of remaining Java SE modules since PS5 runtime only includes "java.base".
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>--patch-module</arg>
                        <arg>java.base=${bdjstack.dir}/pbp-base.jar</arg>
                        <arg>--patch-module</arg>
                        <arg>java.desktop=${bdjstack.dir}/pbp-desktop.jar</arg>
                        <arg>--patch-module</arg>
                        <arg>java.rmi=${bdjstack.dir}/pbp-rmi.jar</arg>
                        <arg>--limit-modules</arg>
                        <arg>java.base,java.desktop,java.rmi</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>